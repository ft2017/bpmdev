/**
 * 
 */
package com.B05a;

import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;

import javax.ejb.EJBException;
import javax.ejb.SessionContext;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;
import javax.xml.namespace.QName;

import org.apache.axis.client.Call;
import org.apache.axis.client.Service;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.dsc.nana.domain.form.FormInstance;
import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;

import javax.ejb.EJBException;
import javax.ejb.SessionContext;
import com.dsc.custom.nana.util.JndiUtil;
import com.dsc.nana.domain.form.FormInstance;
import com.dsc.nana.services.exception.ServiceException;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hsqldb.lib.IntValueHashMap;
import org.jboss.ws.tools.XSDTypeToJava.VAR;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.ejb.EJBException;
import javax.ejb.EJBHome;
import javax.ejb.SessionContext;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.rmi.PortableRemoteObject;
import javax.sql.DataSource;

import com.dsc.nana.data_transfer.ActivityDefPerformerForClientListDTO;
import com.dsc.nana.data_transfer.ActivityDefinitionForClientListDTO;
import com.dsc.nana.domain.form.FormInstance;
import com.dsc.nana.domain.workflow_definition.enumTypes.MultiUserMode;
import com.dsc.nana.domain.workflow_definition.enumTypes.ParticipantType;
import com.dsc.nana.domain.workflow_definition.enumTypes.PerformType;
import com.dsc.nana.services.engine.PerformWorkItemHandler;
import com.dsc.nana.services.engine.PerformWorkItemHandlerHome;
import com.dsc.nana.services.exception.ServiceException;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;

import javax.ejb.EJBException;
import javax.ejb.SessionContext;


/**
 *
 * <!-- begin-user-doc -->
 * A generated session bean
 * <!-- end-user-doc -->
 * *
 * <!-- begin-xdoclet-definition --> 
 * @ejb.bean name="B05a"	
 *           description="An EJB named B05a"
 *           display-name="B05a"
 *           jndi-name="B05a"
 *           type="Stateless" 
 *           transaction-type="Container"
 * 
 * <!-- end-xdoclet-definition --> 
 * @generated
 */

public class B05aBean implements javax.ejb.SessionBean {

	/** 
	 * <!-- begin-xdoclet-definition --> 
	 * <!-- end-xdoclet-definition --> 
	 * @generated
	 */
	private static final long serialVersionUID = 1L;

	/** 
	 *
	 * <!-- begin-xdoclet-definition --> 
	 * @ejb.create-method view-type="remote"
	 * <!-- end-xdoclet-definition --> 
	 * @generated
	 *
	 * //TODO: Must provide implementation for bean create stub
	 */
	public void ejbCreate() {
	}

	/** 
	 *
	 * <!-- begin-xdoclet-definition --> 
	 * @ejb.interface-method view-type="remote"
	 * <!-- end-xdoclet-definition --> 
	 * @generated
	 *
	 * //TODO: Must provide implementation for bean method stub
	 */
	public String foo(String param) {
		return null;
	}

	
	
	
	
	
	
	
	
	
	

	
	
	
	
	/**
	 * 
	 * <!-- begin-xdoclet-definition -->
	 * 
	 * @ejb.interface-method view-type="remote" <!-- end-xdoclet-definition -->
	 * @generated
	 * 
	 *            //TODO: Must provide implementation for bean method stub
	 */

		  public FormInstance insaapt331(FormInstance pForm)
		    throws Exception
		  {
		    System.out.println("start...insaapt331");
		    DataSource tDataSource = null;
		    Connection tCon = null;
		    Statement stmt = null;
		    ResultSet tResultSet = null;
			// List grdItemData1 = pForm.getGridValueByID("Grid1");
			// List grdItemData2 = pForm.getGridValueByID("Grid2");//获取grid里的数据
			String TAjzsm=(pForm.fetchFieldValue("TAjzsm") == null) || (pForm.fetchFieldValue("TAjzsm") == "null") ? "" : pForm.fetchFieldValue("TAjzsm");
			String DHSerialNumber = (pForm.fetchFieldValue("SerialNumber") == null) || (pForm.fetchFieldValue("SerialNumber") == "null") ? "" : pForm.fetchFieldValue("SerialNumber");
			String apcaent=(pForm.fetchFieldValue("HDent") == null) || (pForm.fetchFieldValue("HDent") == "null") ? "" : pForm.fetchFieldValue("HDent");//据点上线后调整，通过获取页面以藏栏位内数值确定
			String apcaownid=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			String apcaowndp=(pForm.fetchFieldValue("TBjkbmId") == null) || (pForm.fetchFieldValue("TBjkbmId") == "null") ? "" : pForm.fetchFieldValue("TBjkbmId");
			String apcacrtid=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			String apcacrtdp=(pForm.fetchFieldValue("TBjkbmId") == null) || (pForm.fetchFieldValue("TBjkbmId") == "null") ? "" : pForm.fetchFieldValue("TBjkbmId");
			java.util.Date utilDate = new java.util.Date();
		    java.sql.Date tmp_apcacrtdt = new java.sql.Date(utilDate.getTime());
		    java.sql.Date apcacrtdt = tmp_apcacrtdt;
	        String apcamodid=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			java.sql.Date apcamoddt = tmp_apcacrtdt;
	        String apcacnfid=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			java.sql.Date apcacnfdt = tmp_apcacrtdt;
			String apcastus="N";
			String apcald=(pForm.fetchFieldValue("TXTztid") == null) || (pForm.fetchFieldValue("TXTztid") == "null") ? "" : pForm.fetchFieldValue("TXTztid");//帐套
			String apcacomp=(pForm.fetchFieldValue("TBzwzxid") == null) || (pForm.fetchFieldValue("TBzwzxid") == "null") ? "" : pForm.fetchFieldValue("TBzwzxid");//财务中心
			String apcadocno="";
			java.sql.Date apcadocdt=tmp_apcacrtdt;
			String apcasite=(pForm.fetchFieldValue("TBzwzxid") == null) || (pForm.fetchFieldValue("TBzwzxid") == "null") ? "" : pForm.fetchFieldValue("TBzwzxid");//财务中心
			//Timestamp ts = new Timestamp(System.currentTimeMillis());
			String apca001="12";
			String apca003=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			String apca004="EMPL";
			String apca005="EMPL";
			String apca007="501";//账款类别
			String apca008="P06";//付款条件
			
			
			java.sql.Date apca009=tmp_apcacrtdt;//应付款日    
			java.sql.Date apca010=tmp_apcacrtdt;//票到日期
	
		    String apca014=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			String apca015=(pForm.fetchFieldValue("TBjkbmId") == null) || (pForm.fetchFieldValue("TBjkbmId") == "null") ? "" : pForm.fetchFieldValue("TBjkbmId");
		    String apca017="0";
			String apca025="0";
			//float apca026=0;
			//float apca027=0;
			//float apca028=0;
		    //float apca029=0;
			String apca035="224102";

				
			String apca040="N";
			float apca044=0;
			String apca052="0";
			String apca056="0";
			String apca057=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			String apca100=(pForm.fetchFieldValue("TBbb") == null) || (pForm.fetchFieldValue("TBbb") == "null") ? "" : pForm.fetchFieldValue("TBbb");
			String apca101=(pForm.fetchFieldValue("TBhl") == null) || (pForm.fetchFieldValue("TBhl") == "null") ? "" : pForm.fetchFieldValue("TBhl");
			String tmp_apca103 = (pForm.fetchFieldValue("TBloan") == null) || (pForm.fetchFieldValue("TBloan") == "null") ? "" : pForm.fetchFieldValue("TBloan");
			double apca103 = Double.parseDouble(tmp_apca103);
			float apca104=0;
			float apca106=0;
			float apca107=0;
			double apca108=apca103;
			double apca113=apca103;
			float apca114=0;
			float apca116=0;
			float apca117=0;
			double apca118=apca103;
			
			float apca121=1;
			float apca123=0;
			float apca124=0;
			float apca126=0;
			float apca127=0;
			float apca128=0;
			
			float apca131=1;
			float apca133=0;
			float apca134=0;
			float apca136=0;
			float apca137=0;
			float apca138=0;
			String apcaud001="Y";
			float apcaud011=0;
			float apcaud012=0;
			float apcaud013=0;
			float apcaud014=0;
			float apcaud015=0;
			float apcaud016=0;
			float apcaud017=0;
			float apcaud018=0;
			float apcaud019=0;
			float apcaud020=0;
			
		   /* String tmp_apca12 = (pForm.fetchFieldValue("apca12") == null) || (pForm.fetchFieldValue("apca12") == "null") ? "" : pForm.fetchFieldValue("apca12");
		    java.sql.Date apca12 = java.sql.Date.valueOf(tmp_apca12.replace('/', '-'));
		   
		    String tmp_apcaud15 = (pForm.fetchFieldValue("Date0") == null) || (pForm.fetchFieldValue("Date0") == "null") ? "" : pForm.fetchFieldValue("Date0");
		    java.sql.Date apcaud15 = java.sql.Date.valueOf(tmp_apcaud15.replace('/', '-'));
*/
		    
			
		    try
		    {
		    	 System.out.println("开始");
		      tDataSource = getJndiDataSource("java:T100");//上线后调整为正式库
		      tCon = tDataSource.getConnection();

		      stmt = tCon.createStatement();
		      java.util.Date d = new java.util.Date();
		      SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm:ss");
		      String dateNowStr = sdf.format(d);
		      dateNowStr = dateNowStr.substring(2, 6);
		      String sbm=(pForm.fetchFieldValue("hdnjd") == null) || (pForm.fetchFieldValue("hdnjd") == "null") ? "" : pForm.fetchFieldValue("hdnjd");
		      String tmp_apcadocno = sbm + "P331A-" + dateNowStr;

		      System.out.println("tmp_apcadocno=" + tmp_apcadocno);
			  
		      String tmp_sql = "select max(apcadocno) as apcadocno from apca_t where apcadocno like '" + tmp_apcadocno + "%' and apcaent='"+apcaent+"'";
		      System.out.println("tmp_sql=" + tmp_sql);
		      tResultSet = stmt.executeQuery(tmp_sql);
		      System.out.println("tResultSet=" + tResultSet.getRow());
		     String  max_apcadocno="";
		      while (tResultSet.next())
		      {
		        if (tResultSet != null) {
		          max_apcadocno = tResultSet.getString("apcadocno");
		          System.out.println("max_apcadocno=" + max_apcadocno);
		        }
		      }

		      if ((max_apcadocno == null) || (max_apcadocno.trim().length() == 0)) {
		        apcadocno = tmp_apcadocno + "000001";
		      
		        String tSql ="insert into oobf_t(oobfent,oobfsite,oobf001,oobf002,oobf003,oobf004,oobfud011,oobfud012,oobfud013,oobfud014,oobfud015,oobfud016,oobfud017,oobfud018,oobfud019,oobfud020)" + 
		        		 "values('"+apcaent+"','"+apcasite+"','"+sbm+"','P331A','"+dateNowStr+"','1','0.000000','0.000000','0.000000','0.000000','0.000000','0.000000','0.000000','0.000000','0.000000','0.000000')";
		      
		        System.out.println("tSql:" + tSql);
				   stmt.executeUpdate(tSql);   
		             System.out.println("插入OOBF成功！" );
		      
		      }
		      else {
		        max_apcadocno = max_apcadocno.substring(13, 19);
		        int Num = Integer.parseInt(max_apcadocno) + 1;
		        System.out.println("Num"+Num );
		        String STR_FORMAT = "000000";
		        DecimalFormat df = new DecimalFormat(STR_FORMAT);
		        apcadocno = tmp_apcadocno + df.format(Num);
		        
		        String tSql ="update oobf_t set oobf004='"+Num+"' where oobf002='P331A' AND oobf003='"+dateNowStr+"' and oobf001='"+sbm+"' and oobfent='"+apcaent+"' ";
		        
		        		System.out.println("tSql:" + tSql);
				   stmt.executeUpdate(tSql);   
		             System.out.println("更新OOBF成功！" );
		      }
		      System.out.println("apcadocno=" + apcadocno);
		      stmt = tCon.createStatement();

		      String tSql = "insert into  apca_t(apcaent,apcaownid,apcaowndp,apcacrtid,apcacrtdp,apcacrtdt,apcamodid,apcamoddt,apcacnfid,apcacnfdt,apcastus,apcald,apcacomp,apcadocno,apcadocdt,apcasite,apca001,apca003,apca004,apca005,apca007,apca008,apca009,apca010,apca014,apca015,apca017,apca025,apca035,apca040,apca044,apca052,apca056,apca057,apca100,apca101,apca103,apca104,apca106,apca107,apca108,apca113,apca114,apca116,apca117,apca118,apca121,apca123,apca124,apca126,apca127,apca128,apca131,apca133,apca134,apca136,apca137,apca138,apcaud011,apcaud012,apcaud013,apcaud014,apcaud015,apcaud016,apcaud017,apcaud018,apcaud019,apcaud020,apcaud001,apca053)" + 
		        "values('"+apcaent+"','"+apcaownid+"','"+apcaowndp+"','"+apcacrtid+"','"+apcacrtdp+"',to_timestamp('"+apcacrtdt+"','YYYY-MM-DD HH24:MI:SS'),'"+apcamodid+"',to_timestamp('"+apcamoddt+"','YYYY-MM-DD HH24:MI:SS'),'"+apcacnfid+"',to_timestamp('"+apcacnfdt+"','YYYY-MM-DD HH24:MI:SS'),'"+apcastus+"','"+apcald+"','"+apcacomp+"','"+apcadocno+"',to_date('"+apcadocdt+"','yyyy-mm-dd'),'"+apcasite+"','"+apca001+"','"+apca003+"','"+apca004+"','"+apca005+"','"+apca007+"','"+apca008+"',to_date('"+apca009+"','yyyy-mm-dd'),to_date('"+apca010+"','yyyy-mm-dd'),'"+apca014+"','"+apca015+"','"+apca017+"','"+apca025+"','"+apca035+"','"+apca040+"','"+apca044+"','"+apca052+"','"+apca056+"','"+apca057+"','"+apca100+"','"+apca101+"','"+apca103+"','"+apca104+"','"+apca106+"','"+apca107+"','"+apca108+"','"+apca113+"','"+apca114+"','"+apca116+"','"+apca117+"','"+apca118+"','"+apca121+"','"+apca123+"','"+apca124+"','"+apca126+"','"+apca127+"','"+apca128+"','"+apca131+"','"+apca133+"','"+apca134+"','"+apca136+"','"+apca137+"','"+apca138+"','"+apcaud011+"','"+apcaud012+"','"+apcaud013+"','"+apcaud014+"','"+apcaud015+"','"+apcaud016+"','"+apcaud017+"','"+apcaud018+"','"+apcaud019+"','"+apcaud020+"','"+apcaud001+"','"+DHSerialNumber+"')";
		      System.out.println("tSql:" + tSql);
		   stmt.executeUpdate(tSql);   
             System.out.println("插入单头成功！" );
                 
                 
                 
                 String 	apcbent=(pForm.fetchFieldValue("HDent") == null) || (pForm.fetchFieldValue("HDent") == "null") ? "" : pForm.fetchFieldValue("HDent");
			String  apcbld=apcald;
			String  apcborga=(pForm.fetchFieldValue("TBzwzxid") == null) || (pForm.fetchFieldValue("TBzwzxid") == "null") ? "" : pForm.fetchFieldValue("TBzwzxid");
			String  apcbdocno=apcadocno;
			String  apcbseq="01";
			String  apcb005="员工借支";
			float  apcb007=1;
			String  apcb010=(pForm.fetchFieldValue("TBjkbmId") == null) || (pForm.fetchFieldValue("TBjkbmId") == "null") ? "" : pForm.fetchFieldValue("TBjkbmId");
			String apcb020="VAT200";
                        float  apcb021=122102;
			String  apcb022="1";
			String  apcb023="N";
			String  apcb029="2241.08";
			String  apcb030="20010";
                            String  apcb047=TAjzsm;
			String  apcb051=(pForm.fetchFieldValue("TBjkrId") == null) || (pForm.fetchFieldValue("TBjkrId") == "null") ? "" : pForm.fetchFieldValue("TBjkrId");
			String  apcb100="CNY";
			float  apcb102=1;
			float  apcb104=0;
                                                            
			float  apcb106=0;
			float  apcb107=0;
                            		float  apcb108=0;
			float  apcb111=0;
                            float  apcb114=0;
			float  apcb113=0;
			String apcb105=(pForm.fetchFieldValue("TBjzje") == null) || (pForm.fetchFieldValue("TBjzje") == "null") ? "" : pForm.fetchFieldValue("TBjzje");
			String  apcb115=(pForm.fetchFieldValue("TBloan") == null) || (pForm.fetchFieldValue("TBloan") == "null") ? "" : pForm.fetchFieldValue("TBloan");
			float  apcb116=0;
			float  apcb117=0;
                            float  apcb118=0;
			float  apcb119=0;
			float  apcb123=0;
			float  apcb124=0;
			float  apcb125=0;
			float  apcb126=0;
			float  apcb127=0;
			float  apcb128=0;
			float  apcb133=0;
			float  apcb134=0;
			float  apcb135=0;
			float  apcb136=0;
			float  apcb137=0;
			float  apcb138=0;
			float  apcbud011=0;
			float  apcbud012=0;
			float  apcbud013=0;
			float  apcbud014=0;
			float  apcbud015=0;
			float  apcbud016=0;
			float  apcbud017=0;
			float  apcbud018=0;
			float  apcbud019=0;
			float  apcbud020=0;
                            String tsql2="insert into apcb_t(apcbent,apcbld,apcborga,apcbdocno,apcbseq,apcb005,apcb007,apcb010," +"apcb022,apcb023,apcb029,apcb030,apcb047,apcb051,apcb100,apcb102,apcb104,apcb105,apcb106,apcb107,apcb108,apcb111,apcb113,apcb114,apcb115,apcb116,apcb117,apcb118,apcb119,apcb123,apcb124,apcb125,apcb126,apcb127,apcb128,apcb133,apcb134,apcb135,apcb136,apcb137,apcb138," +
         "apcbud011,apcbud012,apcbud013,apcbud014,apcbud015,apcbud016,apcbud017,apcbud018,apcbud019,apcbud020,apcb021,apcb020) "+" values ('"+apcbent+"','"+apcbld+"','"+apcborga+"','"+apcbdocno+"','"+apcbseq+"','"+apcb005+"','"+apcb007+"','"+apcb010+"','"+apcb022+"','"+apcb023+"','"+apcb029+"','"+apcb030+"','"+apcb047+"','"+apcb051+"','"+apcb100+"','"+apcb102+"','"+apcb104+"','"+apcb105+"','"+apcb106+"','"+apcb107+"','"+apcb108+"','"+apcb111+"','"+apcb113+"','"+apcb114+"','"+apcb115+"','"+apcb116+"','"+apcb117+"','"+apcb118+"','"+apcb119+"','"+apcb123+"','"+apcb124+"','"+apcb125+"','"+apcb126+"','"+apcb127+"','"+apcb128+"','"+apcb133+"','"+apcb134+"','"+apcb135+"','"+apcb136+"','"+apcb137+"','"+apcb138+"','"+apcbud011+"','"+apcbud012+"','"+apcbud013+"','"+apcbud014+"','"+apcbud015+"','"+apcbud016+"','"+apcbud017+"','"+apcbud018+"','"+apcbud019+"','"+apcbud020+"','"+apcb021+"','"+apcb020+"')";	//apcb015是什么。,apcb015         
         System.out.println("插入单身tsql2..." + tsql2);
         stmt.executeUpdate(tsql2);
         System.out.println("insert into apcb_t  success");


	// 	
		    
		 pForm.configureFieldValue("TBt100",apcadocno);	//回写表单ERP账款编号
		    }
		    catch (SQLException ex) {
		      throw new ServiceException(ex);
		    } catch (Exception e) {
		      throw new ServiceException(e);
		    } finally {
		      try {
		        if (tCon != null) {
		          tCon.close();
		        }
		        if (stmt != null)
		          stmt.close();
		      }
		      catch (SQLException localSQLException1) {
		      }
		    }
		    return pForm;
		  }	 									  

		//取得 DataSource
		  private DataSource getJndiDataSource(String pDataSource) throws Exception {
		  DataSource tDs = null;
		  Context tCtx = null;
		  try { 
		  tCtx = new InitialContext();
		  tDs = (DataSource) tCtx.lookup(pDataSource);
		  }
		  finally {
		  if (tCtx != null) {
		  	try {
		  		tCtx.close();
		  	}
		  	catch (Exception ex) {
		  		ex.printStackTrace();
		  	}
		  	tCtx = null;
		  }
		  }
		  if (tDs == null) {
		  throw new Exception("Can not get DataSource from jndi name " + pDataSource);
		  }
		  return tDs;
		  }


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/* (non-Javadoc)
	 * @see javax.ejb.SessionBean#ejbActivate()
	 */
	public void ejbActivate() throws EJBException, RemoteException {
		// TODO Auto-generated method stub

	}

	/* (non-Javadoc)
	 * @see javax.ejb.SessionBean#ejbPassivate()
	 */
	public void ejbPassivate() throws EJBException, RemoteException {
		// TODO Auto-generated method stub

	}

	/* (non-Javadoc)
	 * @see javax.ejb.SessionBean#ejbRemove()
	 */
	public void ejbRemove() throws EJBException, RemoteException {
		// TODO Auto-generated method stub

	}

	/* (non-Javadoc)
	 * @see javax.ejb.SessionBean#setSessionContext(javax.ejb.SessionContext)
	 */
	public void setSessionContext(SessionContext arg0) throws EJBException,
			RemoteException {
		// TODO Auto-generated method stub

	}

	/**
	 * 
	 */
	public B05aBean() {
		// TODO Auto-generated constructor stub
	}
}
